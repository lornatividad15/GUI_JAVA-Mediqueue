import java.awt.Image;
import javax.swing.ImageIcon;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author acer
 */
public class Delete_SearchDashboard extends javax.swing.JFrame {

    /**
     * Creates new form Delete_SearchDashboard
     */
    public Delete_SearchDashboard() {
        initComponents();
        
        String path = "/Images/1766.png"; 
        ImageIcon icon = new ImageIcon(getClass().getResource(path));
        Image scaledImage = icon.getImage().getScaledInstance(exitICON.getWidth(), exitICON.getHeight(), Image.SCALE_SMOOTH);
        exitICON.setIcon(new ImageIcon(scaledImage));
        
        javax.swing.SwingUtilities.invokeLater(() -> {
            javax.swing.JOptionPane.showMessageDialog(this, "You can search by only one category at a time.");
        });
        // Set placeholders for text fields
        setPlaceholder(patientID_updateTF, "Patient ID");
        setPlaceholder(patientName_updateTF, "Name");
        setPlaceholder(patientAge_updateTF, "Age");
        setPlaceholder(patientTime_updateTF, "Arrival Date/Time");
        setPlaceholder(patientSymptoms_updateTF, "Symptoms");
    }

    private void setPlaceholder(javax.swing.JTextField field, String placeholder) {
        field.setText(placeholder);
        field.setForeground(java.awt.Color.GRAY);
        field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent e) {
                if (field.getText().equals(placeholder)) {
                    field.setText("");
                    field.setForeground(java.awt.Color.BLACK);
                }
            }
            public void focusLost(java.awt.event.FocusEvent e) {
                if (field.getText().isEmpty()) {
                    field.setText(placeholder);
                    field.setForeground(java.awt.Color.GRAY);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        patientID_updateTF = new javax.swing.JTextField();
        exitICON = new javax.swing.JLabel();
        patientName_updateTF = new javax.swing.JTextField();
        patientAge_updateTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        male_updateRB = new javax.swing.JRadioButton();
        female_updateRB = new javax.swing.JRadioButton();
        patientTime_updateTF = new javax.swing.JTextField();
        patientSymptoms_updateTF = new javax.swing.JTextField();
        priority_updateCoB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        update_patientBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(3, 161, 241));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("DELETE PATIENT");

        jPanel2.setBackground(new java.awt.Color(244, 243, 243));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));

        patientID_updateTF.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        exitICON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitICONMouseClicked(evt);
            }
        });

        patientName_updateTF.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        patientName_updateTF.setText("Name");

        patientAge_updateTF.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        patientAge_updateTF.setText("Age");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Gender:");

        buttonGroup1.add(male_updateRB);
        male_updateRB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        male_updateRB.setText("MALE");

        buttonGroup1.add(female_updateRB);
        female_updateRB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        female_updateRB.setText("FEMALE");

        patientTime_updateTF.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        patientTime_updateTF.setText("Arrival Date/Time");

        patientSymptoms_updateTF.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        patientSymptoms_updateTF.setText("Symptoms");

        priority_updateCoB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        priority_updateCoB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Normal", "Urgent", "Emergency" }));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Priority Level:");

        update_patientBTN.setBackground(new java.awt.Color(243, 241, 241));
        update_patientBTN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        update_patientBTN.setText("SEARCH");
        update_patientBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_patientBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(exitICON, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(priority_updateCoB, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientTime_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(male_updateRB)
                                .addGap(18, 18, 18)
                                .addComponent(female_updateRB))
                            .addComponent(patientAge_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientName_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientID_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientSymptoms_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(update_patientBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitICON, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(patientID_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientName_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientAge_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(male_updateRB)
                    .addComponent(female_updateRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientTime_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientSymptoms_updateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priority_updateCoB, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(update_patientBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(353, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(334, 334, 334))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(380, 380, 380))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitICONMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitICONMouseClicked
        MenuDashboard menu = new MenuDashboard(); // Create new MainMenu frame
        menu.setVisible(true); // Show MainMenu window
        this.dispose(); // Close login windo
    }//GEN-LAST:event_exitICONMouseClicked

    private void update_patientBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_patientBTNActionPerformed
        // Collect all possible search fields
        String id = patientID_updateTF.getText().trim();
        String name = patientName_updateTF.getText().trim();
        String age = patientAge_updateTF.getText().trim();
        String gender = male_updateRB.isSelected() ? "Male" : (female_updateRB.isSelected() ? "Female" : "");
        String arrival = patientTime_updateTF.getText().trim();
        String symptoms = patientSymptoms_updateTF.getText().trim();
        String priority = (String) priority_updateCoB.getSelectedItem();
        // Count how many fields are filled (not default/empty)
        int filled = 0;
        String field = null, value = null;
        if (!id.isEmpty() && !id.equals("Patient ID")) { filled++; field = "id"; value = id; }
        if (!name.isEmpty() && !name.equals("Name")) { filled++; field = "name"; value = name; }
        if (!age.isEmpty() && !age.equals("Age")) { filled++; field = "age"; value = age; }
        if (!gender.isEmpty()) { filled++; field = "gender"; value = gender; }
        if (!arrival.isEmpty() && !arrival.equals("Arrival Date/Time")) { filled++; field = "arrival_time"; value = arrival; }
        if (!symptoms.isEmpty() && !symptoms.equals("Symptoms")) { filled++; field = "symptoms"; value = symptoms; }
        // Allow searching for priority, including "Normal" (but not "Select")
        if (priority != null && !priority.equals("Select")) { filled++; field = "priority"; value = priority; }
        if (filled == 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please fill in one field to search.");
            return;
        }
        if (filled > 1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please fill in only one field to search.");
            return;
        }
        // Search DB for patients matching the field
        try {
            java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/mediqueue", "root", "");
            String sql = "SELECT * FROM patient WHERE " + field + " = ?";
            java.sql.PreparedStatement stmt = conn.prepareStatement(sql);
            if (field.equals("age") || field.equals("id")) {
                stmt.setInt(1, Integer.parseInt(value));
            } else {
                stmt.setString(1, value);
            }
            java.sql.ResultSet rs = stmt.executeQuery();
            java.util.List<Object[]> results = new java.util.ArrayList<>();
            while (rs.next()) {
                results.add(new Object[] {
                    rs.getInt("id"),
                    rs.getString("name"),
                    rs.getInt("age"),
                    rs.getString("gender"),
                    rs.getString("arrival_time"),
                    rs.getString("symptoms"),
                    rs.getString("priority")
                });
            }
            rs.close();
            stmt.close();
            conn.close();
            if (results.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "No patient found matching your search.");
                return;
            }
            // Pass results to DeletePatientDashboard (static field for simplicity)
            DeletePatientDashboard.setSearchResults(results);
            DeletePatientDashboard del = new DeletePatientDashboard();
            del.setVisible(true);
            this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Database error occurred.");
        }
    }//GEN-LAST:event_update_patientBTNActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        jPanel1.requestFocusInWindow();
    }//GEN-LAST:event_jPanel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Delete_SearchDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Delete_SearchDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Delete_SearchDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Delete_SearchDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Delete_SearchDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel exitICON;
    private javax.swing.JRadioButton female_updateRB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton male_updateRB;
    private javax.swing.JTextField patientAge_updateTF;
    private javax.swing.JTextField patientID_updateTF;
    private javax.swing.JTextField patientName_updateTF;
    private javax.swing.JTextField patientSymptoms_updateTF;
    private javax.swing.JTextField patientTime_updateTF;
    private javax.swing.JComboBox<String> priority_updateCoB;
    private javax.swing.JButton update_patientBTN;
    // End of variables declaration//GEN-END:variables
}
